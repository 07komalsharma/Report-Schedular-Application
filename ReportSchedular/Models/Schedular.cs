//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReportSchedular.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;

    public partial class Schedular
    {
        public int SchedularID { get; set; }

        [Required(ErrorMessage = "Schedular name is required")]
        [StringLength(50, ErrorMessage = "Scheduler name cannot be longer than 50 characters.")]
        [RegularExpression(@"^[^<>?!~+,/@#$%^&*()]+$", ErrorMessage = "Special characters are not allowed.")]
        public string SchedularName { get; set; }
        [Required(ErrorMessage = "The email address is required")]
        public string Email { get; set; }
        public TimeSpan SchedularTime { get; set; }
       
        public virtual int ItemTypesId
        {
            get
            {
                return (int)this.Frequency;
            }
            set
            {
                Frequency = (ItemTypes)value;
            }
        }
        [EnumDataType(typeof(ItemTypes))]
        public ItemTypes Frequency { get; set; }
        public virtual int DaysTypeId
        {
            get
            {
                return (int)this.Weekdays;
            }
            set
            {
                Weekdays = (DaysType)value;
            }
        }
        [EnumDataType(typeof(DaysType))]
      
        
        public DaysType Weekdays { get; set; }
        public int MonthlyDate { get; set; }

        public DateTime CreatedOn { get; set; }

        public int CreatedBy { get; set; }

        public DateTime NextTime  { get; set;}
    }
    public enum ItemTypes
    {
        Daily = 1,
        Weekly = 2,
        Monthly = 3
    }
    public enum DaysType
    {
        Monday = 1,
        Tuesday = 2,
        Wednesday = 3,
        Thursday = 4,
        Friday = 5,
        Saturday = 6,
        Sunday = 7,
    }
}


/*
 
  public int SchedularID { get; set; }

        [Required(ErrorMessage = "Schedular name is required")]
        [StringLength(50, ErrorMessage = "Scheduler name cannot be longer than 50 characters.")]
        [RegularExpression(@"^[^<>?!~+,/@#$%^&*()]+$", ErrorMessage = "Special characters are not allowed.")]
        public string SchedularName { get; set; }

        [Required(ErrorMessage = "The email address is required")]
        public string Email { get; set; }
        public TimeSpan SchedularTime { get; set; }

        public virtual int ItemTypesId
        {
            get
            {
                return (int)this.Frequency;
            }
            set
            {
                Frequency = (ItemTypes)value;
            }
        }
        [EnumDataType(typeof(ItemTypes))]
        public ItemTypes Frequency { get; set; }
        public virtual int DaysTypeId
        {
            get
            {
                return (int)this.Weekdays;
            }
            set
            {
                Weekdays = (DaysType)value;
            }
        }
        [EnumDataType(typeof(DaysType))]


        public DaysType Weekdays { get; set; }
        public int MonthlyDate { get; set; }

        public DateTime CreatedOn { get; set; }

        public int CreatedBy { get; set; }

        public class Log
        {
            public DateTime Timestamp { get; set; }
            public string Message { get; set; }
        }
    }
    public enum ItemTypes
    {
        Daily = 1,
        Weekly = 2,
        Monthly = 3
    }
    public enum DaysType
    {
        Monday = 1,
        Tuesday = 2,
        Wednesday = 3,
        Thursday = 4,
        Friday = 5,
        Saturday = 6,
        Sunday = 7,
    }
} 
 */
